# pull all portfolio project images from docker hub

services:

# nginx-proxy:
  nginx-proxy:
    container_name: nginx-proxy
    image: nginx:latest
    restart: unless-stopped
    ports:
    - 80:80
    - 443:443
    volumes:
    #TODO: move the .conf-${ENV} file into an nginx folder (ignore the folder) in the repo and rename file to default.conf-${ENV}
      - ./nginx/default.conf-${ENV}:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt  # change volume dir as needed but never path within container
      - ./certbot/www:/var/www/certbot  # change volume dir as needed but never path within container

# homepage  
  homepage:
    container_name: homepage
    image: incerto13/homepage:${ENV}-latest
    restart: unless-stopped
    ports:
      - 8080:80

# react-to-do
  react-to-do_postgres:
    container_name: react-to-do_postgres
    image: incerto13/react-to-do_postgres:${ENV}-latest
    environment:      
      POSTGRES_DB: react-to-do     
      POSTGRES_USER: postgres      
      POSTGRES_PASSWORD: postgres
    ports:
      - "${REACT_TO_DO_POSTGRES_PORT}:${REACT_TO_DO_POSTGRES_PORT}"
    restart: unless-stopped
  react-to-do_web:
    container_name: react-to-do_web
    image: incerto13/react-to-do_web:${ENV}-latest
    ports:
      - "${REACT_TO_DO_WEB_PORT}:80"
    restart: unless-stopped
  react-to-do_server:
    container_name: react-to-do_server
    image: incerto13/react-to-do_server:${ENV}-latest
    environment:
      REACT_TO_DO_TYPEORM_HOST: $REACT_TO_DO_TYPEORM_HOST
      REACT_TO_DO_POSTGRES_PORT: $REACT_TO_DO_POSTGRES_PORT
    ports:
      - "${REACT_TO_DO_SERVER_PORT}:3001"
    restart: unless-stopped     

# react-electoral-map
  react-electoral-map:
    container_name: react-electoral-map
    image: incerto13/react-electoral-map:${ENV}-latest
    restart: unless-stopped
    ports:
      - "${REACT_ELECTORAL_MAP_PORT}:80"
            
    
# react-course-admin
  react-course-admin_postgres:
    container_name: react-course-admin_postgres
    image: incerto13/react-course-admin_postgres:${ENV}-latest
    environment:      
      POSTGRES_DB: react-course-admin   
      POSTGRES_USER: postgres      
      POSTGRES_PASSWORD: postgres
    ports:
      - "${REACT_COURSE_ADMIN_POSTGRES_PORT}:${REACT_COURSE_ADMIN_POSTGRES_PORT}"
    restart: unless-stopped
  react-course-admin_web:
    container_name: react-course-admin_web
    image: incerto13/react-course-admin_web:${ENV}-latest
    ports:
      - "${REACT_COURSE_ADMIN_WEB_PORT}:80"
    restart: unless-stopped
  react-course-admin_server:
    container_name: react-course-admin_server
    image: incerto13/react-course-admin_server:${ENV}-latest
    environment:
      REACT_COURSE_ADMIN_TYPEORM_HOST: $REACT_COURSE_ADMIN_TYPEORM_HOST
      REACT_COURSE_ADMIN_POSTGRES_PORT: $REACT_COURSE_ADMIN_POSTGRES_PORT
    ports:
      - "${REACT_COURSE_ADMIN_SERVER_PORT}:3001"
    restart: unless-stopped  

# nest-blog-api
  nest-blog-api_postgres:
    container_name: nest-blog-api_postgres
    image: incerto13/nest-blog-api_postgres:${ENV}-latest
    environment:      
      POSTGRES_DB: nest-blog     
      POSTGRES_USER: postgres      
      POSTGRES_PASSWORD: postgres
    ports:
      - "${NEST_BLOG_API_POSTGRES_PORT}:${NEST_BLOG_API_POSTGRES_PORT}"
    restart: unless-stopped
  nest-blog-api_server:
    container_name: nest-blog-api_server
    image: incerto13/nest-blog-api_server:${ENV}-latest
    environment:
      NEST_BLOG_API_TYPEORM_HOST: $NEST_BLOG_API_TYPEORM_HOST
      NEST_BLOG_API_POSTGRES_PORT: $NEST_BLOG_API_POSTGRES_PORT
    ports:
      - "${NEST_BLOG_API_SERVER_PORT}:3001"
    restart: unless-stopped

